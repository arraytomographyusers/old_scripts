function [] = GUI_WHOLE()


S.fh(1) = figure('units','pixels',...
              'position',[600 300 150 120],...
              'menubar','none',...
              'name',' Segment',...
              'numbertitle','off',...
              'resize','off'); 
       
S.txalign(1) = uicontrol('units','pixels',...
                 'style','text',...
                 'unit','pix',...
                 'position',[20 80 110 25],...
                 'string','Reference channel');    
S.edalign(1) = uicontrol('style','edit',...
                 'unit','pix',...
                 'position',[20 60 110 25],...
                 'string','psd');    
S.pbnextalign(1) = uicontrol('style','push',...
                 'unit','pix',...
                 'position',[20 20 110 30],...
                 'string','Next >>',...
                 'callback',{@nextalign,S},...
                 'enable','off');
S.fm = uimenu(S.fh,...
                 'label','Select path',...
                 'callback',{@fm_call,S},...
                 'enable','on');         
                     
S.NAME = {'No sequence selected'};

     function [] = nextalign(varargin)
        % Callback for pushbutton.
         try
            set(S.txalign(1),{'visible'},{'off'});
            set(S.edalign(1),{'visible'},{'off'});
            set(S.pbnextalign(1),{'visible'},{'off'});
            set(S.fm,{'visible'},{'off'});
            set(S.fh(1),{'position'},{[600 300 150 300]});

            S.bgsegm(1) = uibuttongroup('units','pix',...
                         'pos',[20 140 110 75]);                
            S.rdsegm(1) = uicontrol(S.bgsegm(1),...
                        'style','rad',...
                        'unit','pix',...
                        'position',[20 40 70 25],...
                        'string','Mean');
            S.rdsegm(2) = uicontrol(S.bgsegm(1),...
                        'style','rad',...
                        'unit','pix',...
                        'position',[20 10 70 25],...
                        'string','Median');             
            S.txsegm(1) = uicontrol('units','pixels',...
                     'style','text',...
                     'unit','pix',...
                     'position',[20 255 50 40],...
                     'string','Window size');    
            S.txsegm(2) = uicontrol('units','pixels',...
                     'style','text',...
                     'unit','pix',...
                     'position',[20 225 50 25],...
                     'string','C factor'); 
            S.edsegm(1) = uicontrol('style','edit',...
                     'unit','pix',...
                     'position',[80 265 50 25],...
                     'string','15');    
            S.edsegm(2) = uicontrol('style','edit',...
                     'unit','pix',...
                     'position',[80 230 50 25],...
                     'string','1.5');    
            S.pbnextsegm(1) = uicontrol('style','push',...
                     'unit','pix',...
                     'position',[20 60 110 30],...
                     'string','<< Back',...
                     'callback',{@backsegm,S},...
                     'enable','on'); 
            S.pbbacksegm(1) = uicontrol('style','push',...
                     'unit','pix',...
                     'position',[20 20 110 30],...
                     'string','Next >>',...
                     'callback',{@nextsegm,S},...
                     'enable','on'); 
         catch
           pause(.03)
           set(S.pb(1),'str','Analyze','backg',col)
           disp('[GUI_WHOLE] Unable to align. Please check srcPath and try again')
        end
      % Now reset the button features.
     end
 
     function [] = backsegm(varargin)
        try
            set(S.fh(1),{'position'},{[600 300 150 120]});

            set(S.bgsegm(1),{'visible'},{'off'});
            set(S.rdsegm(1),{'visible'},{'off'});
            set(S.rdsegm(2),{'visible'},{'off'});
            set(S.txsegm(2),{'visible'},{'off'});
            set(S.edsegm(1),{'visible'},{'off'});
            set(S.edsegm(2),{'visible'},{'off'});
            set(S.txsegm(1),{'visible'},{'off'});
            set(S.pbnextsegm(1),{'visible'},{'off'});
            set(S.pbbacksegm(1),{'visible'},{'off'});
            set(S.fm,{'visible'},{'on'});
            
            set(S.txalign(1),{'visible'},{'on'});
            set(S.edalign(1),{'visible'},{'on'});
            set(S.pbnextalign(1),{'visible'},{'on'});
        catch
            disp('[GUI_WHOLE] Error en backsegm')
        end
     end

    function [] = nextsegm(varargin)
        try
            set(S.fh(1), {'position'},{[600 300 290 160]})    
            
            set(S.bgsegm(1),{'visible'},{'off'});
            set(S.rdsegm(1),{'visible'},{'off'});
            set(S.rdsegm(2),{'visible'},{'off'});
            set(S.txsegm(2),{'visible'},{'off'});
            set(S.edsegm(1),{'visible'},{'off'});
            set(S.edsegm(2),{'visible'},{'off'});
            set(S.txsegm(1),{'visible'},{'off'});
            set(S.pbnextsegm(1),{'visible'},{'off'});
            set(S.pbbacksegm(1),{'visible'},{'off'});

            S.txcoloc(1) = uicontrol('units','pixels',...
                 'style','text',...
                 'unit','pix',...
                 'position',[50 115 200 40],...
                 'string','Number of channels');    
            S.edcoloc(1) = uicontrol('style','edit',...
                 'unit','pix',...
                 'string','2',...
                 'position',[110 110 80 25]);            
            S.pbnextcoloc(1) = uicontrol('style','push',...
                 'unit','pix',...
                 'position',[20 20 260 30],...
                 'string','Next >>',...
                 'callback',{@nextcoloc,S},...
                 'enable','on');
            S.pbbackcoloc(1) = uicontrol('style','push',...
                 'unit','pix',...
                 'position',[20 60 260 30],...
                 'string','<< Back',...
                 'callback',{@backcoloc,S},...
                 'enable','on');      
        catch
            disp('[GUI_WHOLE] Error en next segm')
        end
    end

   function [] = backcoloc(varargin)
        try
            set(S.fh(1), {'position'},{[600 300 150 300]})    
   
            set(S.txcoloc(1),{'visible'},{'off'});
            set(S.edcoloc(1),{'visible'},{'off'});
            set(S.pbnextcoloc(1),{'visible'},{'off'});
            set(S.pbbackcoloc(1),{'visible'},{'off'});
            
            set(S.bgsegm(1),{'visible'},{'on'});
            set(S.rdsegm(1),{'visible'},{'on'});
            set(S.rdsegm(2),{'visible'},{'on'});
            set(S.txsegm(2),{'visible'},{'on'});
            set(S.edsegm(1),{'visible'},{'on'});
            set(S.edsegm(2),{'visible'},{'on'});
            set(S.txsegm(1),{'visible'},{'on'});
            set(S.pbnextsegm(1),{'visible'},{'on'});
            set(S.pbbacksegm(1),{'visible'},{'on'});
        catch
            disp('[GUI_WHOLE] Error en back coloc')
        end
   end

    function [] = nextcoloc(varargin)
        
        numchan = str2double(get(S.edcoloc(1),'string'));
        height = (numchan-1)*44 + 210;
        try
            set(S.fh(1),{'position'},{[600 300 290 height]});
            set(S.txcoloc(1),{'visible'},{'off'});
            set(S.edcoloc(1),{'visible'},{'off'});
            
            S.pbanalyze(1) = uicontrol('style','push',...
                 'unit','pix',...
                 'position',[20 20 260 30],...
                 'string','Analyze',...
                 'callback',{@analyze,S},...
                 'enable','on');
            S.pbbackcoloc(2) = uicontrol('style','push',...
                 'unit','pix',...
                 'position',[20 60 260 30],...
                 'string','<< Back',...
                 'callback',{@backcoloc2,S},...
                 'visible','on');
            
            num = numchan;
             for i=5:numchan+4
                 chan_name = strcat('Channel:    ', num2str(i-4));
                 pos = 40*(num)+110;
                 S.txcoloc(i) = uicontrol('units','pixels',...
                     'style','text',...
                     'unit','pix',...
                     'position',[25 pos+5 50 15],...
                     'string',chan_name);    
                  S.edcoloc(i) = uicontrol('style','edit',...
                     'unit','pix',...
                     'position',[80 pos 80 25]);
                  S.edmincoloc(i-4) = uicontrol(S.fh(1),...
                  'style','edit',...
                 'unit','pix',...
                 'position',[190 pos 40 25],...
                 'string','3');    
                  S.edmaxcoloc(i-4) = uicontrol(S.fh(1),...
                  'style','edit',...
                 'unit','pix',...
                 'position',[240 pos 40 25],...
                 'string','inf'); 
                 num=num-1;
             end
             S.chcoloc2 = uicontrol('style','checkbox',...
                     'unit','pix',...
                     'position',[20 115 160 30],...
                     'Value',1,...
                     'string','Use randomize');
             
             num = numchan;
              pos2 = 40*(num)+140;
                 S.txchannelscoloc = uicontrol(S.fh(1),...
                 'units','pixels',...
                 'style','text',...
                 'unit','pix',...
                 'position',[20 pos2 170 12],...
                 'string','Introduce channel names');  
                 S.txpixcoloc = uicontrol(S.fh(1),...
                 'units','pixels',...
                 'style','text',...
                 'unit','pix',...
                 'position',[190 pos2+18 70 12],...
                 'string','Filter by size');  
                S.txmincoloc = uicontrol(S.fh(1),...
                 'units','pixels',...
                 'style','text',...
                 'unit','pix',...
                 'position',[190 pos2 40 12],...
                 'string','From...');    
                S.txmaxcoloc = uicontrol(S.fh(1),...
                'units','pixels',...
                 'style','text',...
                 'unit','pix',...
                 'position',[240 pos2 40 12],...
                 'string','To...'); 
             
                S.txneuropilcoloc = uicontrol(S.fh(1),...
                'units','pixels',...
                 'style','text',...
                 'unit','pix',...
                 'position',[120 130 200 12],...
                 'string','calc neuropil area with'); 
               S.edneuropilcoloc = uicontrol(S.fh(1),...
                  'style','edit',...
                 'unit','pix',...
                 'position',[190 100 80 25],...
                 'string','syph'); 

             
            set(S.pbnextcoloc(1),{'visible'},{'off'});
            set(S.pbbackcoloc(2),{'visible'},{'on'});          
            set(S.pbanalyze(1),{'enable'},{'on'});
        catch
            disp('[GUI_WHOLE] Unable to set channels. Check number of channels and try again');
            set(S.pbnextcoloc(1),{'visible'},{'off'});
            set(S.pbbackcoloc(2),{'visible'},{'on'});          
            set(S.pbanalyze(1),{'enable'},{'on'});
        end     
    end

function [] = backcoloc2(varargin)
       
        try
            set(S.fh(1), {'position'},{[600 300 290 160]})   
             numchan = str2double(get(S.edcoloc(1),'string'));
             
             set(S.txcoloc(1),{'visible'},{'on'});
             set(S.edcoloc(1),{'visible'},{'on'});
             set(S.pbnextcoloc(1),{'visible'},{'on'});
             set(S.pbbackcoloc(1),{'visible'},{'on'});
             set(S.edneuropilcoloc,{'visible'},{'off'});
             set(S.txneuropilcoloc,{'visible'},{'off'});
             set(S.chcoloc,{'visible'},{'off'});  
             set(S.txchannelscoloc,{'visible'},{'off'});
             
             set(S.pbbackcoloc(2),{'visible'},{'off'});
             set(S.pbanalyze(1),{'visible'},{'off'});    
             
             for i=5:numchan+4
                  set(S.txcoloc(i),{'visible'},{'off'});
                  set(S.edcoloc(i),{'visible'},{'off'});
                  set(S.edmincoloc(i-4),{'visible'},{'off'});
                  set(S.edmaxcoloc(i-4),{'visible'},{'off'});  
             end
             
            set(S.txpixcoloc,{'visible'},{'off'});
            set(S.txmincoloc,{'visible'},{'off'});
            set(S.txmaxcoloc,{'visible'},{'off'});
        catch
            disp('[GUI_WHOLE] Error back coloc');
        end     
    end

  function [] = analyze(varargin)
    % Callback for pushbutton.
         try
            path = get(S.ed(3),'string');
            
            %align parameters
            ref = get(S.edalign(1),'string');
            
            %segment parameters
            window = get(S.edsegm(1),'string'); 
            factor = get(S.edsegm(2),'string'); 
            ws = str2double(window);
            sf = str2num(factor);

            %coloc parameters
           number_channels = str2double(get(S.edcoloc(1),'string')); 
           R = get(S.chcoloc2,'Value');
            
           for i=1:number_channels    
               channels{i} = get(S.edcoloc(i+4),'string');
               min_size {i} = get(S.edmincoloc(i),'string');
               max_size {i}= get(S.edmaxcoloc(i),'string');
               min_size {i} = str2double(min_size {i});
               if strcmp(max_size {i},'inf')
                    max_size {i} = 999999;
               else
                    max_size {i} = str2double(max_size{i});
               end
           end
           NeuropilChannel = get(S.edneuropilcoloc,'string');
             
            col = get(S.pbanalyze(1),'backg');  % Get the background color of the figure.
            pause(0.05)
            set(S.pbanalyze(1),'str','RUNNING...','backg',[1 .6 .6]) 
            set(S.pbbackcoloc(2),{'enable'},{'off'});
            set(S.edneuropilcoloc,{'enable'},{'off'});
            set(S.edcoloc(1),{'enable'},{'off'});
            set(S.chcoloc,{'enable'},{'off'}); 
            set(S.chcoloc2,{'enable'},{'off'})
            
            for i=1:number_channels    
               set(S.edcoloc(i+4),{'enable'},{'off'});  
               set(S.edmincoloc(i),{'enable'},{'off'});  
               set(S.edmaxcoloc(i),{'enable'},{'off'});  
            end

            switch findobj(get(S.bgsegm(1),'selectedobject'))
                case S.rdsegm(1)  
                    pause(.05)
                    align_module(path,ref)
                    path_segm = strcat(path,'\aligned\');
                    segment(path_segm,ws,sf,'mean',0,999999) 
                    path_overlap = strcat(path_segm,'\segmented_2016\');
                    overlap(number_channels,channels,path_overlap,min_size,max_size, NeuropilChannel,R)
                case S.rdsegm(2)
                    pause(.05)
                    align_module(path,ref)
                    path_segm = strcat(path,'\aligned\');
                    segment(path_segm,ws,sf,'median',0,999999) 
                    path_overlap = strcat(path_segm,'\segmented_2016\');
                    overlap(number_channels,channels,path_overlap,min_size,max_size, NeuropilChannel,R)
            end
            pause(.05)
            set(S.pbanalyze(1),'str','Analyze','backg',col)
            set(S.pbbackcoloc(2),{'enable'},{'on'});
            set(S.edneuropilcoloc,{'enable'},{'on'});
            set(S.edcoloc(1),{'enable'},{'on'});
            set(S.chcoloc,{'enable'},{'on'}); 
            set(S.chcoloc2,{'enable'},{'on'})
            
            for i=1:number_channels    
               set(S.edcoloc(i+4),{'enable'},{'on'});  
               set(S.edmincoloc(i),{'enable'},{'on'});  
               set(S.edmaxcoloc(i),{'enable'},{'on'});  
            end;
         catch
            pause(0.05)
            set(S.pbanalyze(1),'str','Analyze','backg',col)
            disp('[GUI_WHOLE] problems with analyze...')
         end
  % Now reset the button features.
  end

    function [] = fm_call(varargin)     
         try
            S.fh(2) = figure('units','pixels',...
                 'position',[470 250 300 70],...
                 'name','Select sequence to previsualize',...
                 'menubar','none',...
                 'numbertitle','off');
            S.ed(3) = uicontrol('units','pixels',...
                  'style','edit',...
                  'unit','pix',...
                  'position',[20 20 260 30],...
                   'string','No path selected');
               
            set(S.fh(1),'CloseRequestFcn', @preCloseMain);
            srcPath = uigetdir('C:\Users\Usuario','Select the sequence path'); %DIRECTORI  ON ESTAN LES IMATGES
            
            set(S.ed(3),'string',srcPath);
            set(S.pbnextalign,{'enable'},{'on'});
         catch
            disp('Unable to Load.  Check Name and Try Again.')
         end
    end

    function preCloseMain(varargin)
      try 
%        fprintf('Closing non-main figures!\n');
        close(S.fh(2));
        
        handles=findall(0,'type','figure'); % find all handles opened
        close(handles);
      end 
%      fprintf('Closing main figure!\n');     
      delete(S.fh(1));
    end

end